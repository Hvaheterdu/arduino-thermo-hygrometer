<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArduinoThermoHygrometer.Web</name>
    </assembly>
    <members>
        <member name="M:ArduinoThermoHygrometer.Web.Controllers.HealthcheckController.GetHealthCheckReport">
            <summary>
            Retrieves the health check report.
            </summary>
            <returns>The health report.</returns>
            <response code="200">Returns the health report.</response>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Extensions.ProgramExtensions.AddHttpsRedirection(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Adds HTTP redirection to the WebApplicationBuilder.
            </summary>
            <param name="builder">The WebApplicationBuilder instance.</param>
            <returns>The updated WebApplicationBuilder instance.</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Extensions.ProgramExtensions.AddApiVersioning(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Adds API versioning to the WebApplicationBuilder.
            </summary>
            <param name="builder">The WebApplicationBuilder instance.</param>
            <returns>The updated WebApplicationBuilder instance.</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Extensions.ProgramExtensions.RegisterDatabaseAndRunMigrationsOnStartup``1(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Registers the database and runs migrations on application startup.
            </summary>
            <typeparam name="T">The type of the DbContext.</typeparam>
            <param name="builder">The WebApplicationBuilder instance.</param>
            <returns>The updated WebApplicationBuilder instance.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the database provider is not SQL Server.</exception>"
            <exception cref="T:System.NotImplementedException">Thrown when unable to connect to the database.</exception>"
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.BatteryMapper.GetBatteryFromBatteryDto(ArduinoThermoHygrometer.Web.DTOs.BatteryDto)">
            <summary>
            Battery entity to dto mapper.
            </summary>
            <param name="batteryDto">Dto object.</param>
            <returns>Battery entity</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.BatteryMapper.GetBatteryDtoFromBattery(ArduinoThermoHygrometer.Domain.Entities.Battery)">
            <summary>
            Battery dto to entity mapper.
            </summary>
            <param name="battery">Entity object.</param>
            <returns>BatteryDto entity</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.TemperatureMapper.GetTemperatureFromTemperatureDto(ArduinoThermoHygrometer.Web.DTOs.TemperatureDto)">
            <summary>
            Temperature entity to dto mapper.
            </summary>
            <param name="temperatureDto">Dto object.</param>
            <returns>Temperature entity</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.TemperatureMapper.GetTemperatureDtoFromTemperature(ArduinoThermoHygrometer.Domain.Entities.Temperature)">
            <summary>
            Temperature dto to entity mapper.
            </summary>
            <param name="temperature">Entity object.</param>
            <returns>TemperatureDto entity</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Middleware.SecurityHeadersMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the middleware for security headers.
            </summary>
            <param name="httpContext">The HTTP context.</param>
            <returns>A task that represents the asynchronous middleware operation.</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.OpenApi.ConfigureSwaggerGenOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Configures the SwaggerGenOptions for generating Swagger documentation.
            </summary>
            <param name="options">The SwaggerGenOptions to configure.</param>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.OpenApi.ConfigureSwaggerGenOptions.CreateOpenApiInfoForVersion(Asp.Versioning.ApiExplorer.ApiVersionDescription)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.OpenApi.Models.OpenApiInfo"/> for the specified <paramref name="apiDescription"/>.
            </summary>
            <param name="apiDescription">The <see cref="T:Asp.Versioning.ApiExplorer.ApiVersionDescription"/> object.</param>
            <returns>An instance of <see cref="T:Microsoft.OpenApi.Models.OpenApiInfo"/>.</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.OpenApi.ConfigureSwaggerGenOptions.Configure(System.String,Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Has to be implemented because of the interface.
            Calls the Configure method without the name parameter.
            </summary>
            <param name="name">The name of the options instance to configure.</param>
            <param name="options">The SwaggerGenOptions to configure.</param>
        </member>
    </members>
</doc>
